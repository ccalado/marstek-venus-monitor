name: Deploy Multiple Branches to GitHub Pages

on:
  push:
    branches:
      - main
      - stable
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_matrix:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.generate-matrix.outputs.branches }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Matrix
        id: generate-matrix
        run: |
          # Only build specific branches we care about
          branches='["main", "stable"]'
          echo "branches=${branches}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    name: Build
    needs:
      - build_matrix
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.build_matrix.outputs.branches) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: Build branch content
        run: |
          # Clean up unnecessary files
          rm -rf .git .github test .claude
          mkdir -p dist
          cp -r * dist/ 2>/dev/null || true
      - uses: actions/upload-artifact@v4
        with:
          name: branch-${{ strategy.job-index }}-${{ matrix.branch }}
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs:
      - build_matrix
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: branches

      - name: Create unified deployment
        run: |
          mkdir public
          
          # Get branch list
          branches='${{ needs.build_matrix.outputs.branches }}'
          echo "Building site with branches: ${branches}"
          
          # Copy stable branch to root (main production site)
          if [ -d "branches/branch-1-stable" ]; then
            cp -r branches/branch-1-stable/* public/
          fi
          
          # Copy main branch to /latest directory (beta/development)
          if [ -d "branches/branch-0-main" ]; then
            mkdir -p public/latest
            cp -r branches/branch-0-main/* public/latest/
          fi
          
          # Create version info
          echo "ðŸš€ Multi-version deployment complete!"
          echo "ðŸ“‚ Site structure:"
          find public -name "index.html" -type f
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4